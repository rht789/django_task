module 8: Django CRUD operation
8.1 Dynamic Dashboard
in our dashboard/dashboard.html and manager_dashboard.html everything is in static we need to make it dynamic by sending the data to the template from views.py, so in views.py :
def manager_dashboard(request):
    tasks=Task.objects.all()
    total_task = tasks.count()
    completed_task = Task.objects.filter(status='COMPLETED').count()
    in_progress_task = Task.objects.filter(status='IN_PROGRESS').count()
    pending_task = Task.objects.filter(status='PENDING').count()
    
    context = {
        "tasks":tasks,
        "total_task":total_task,
        "completed_task":completed_task,
        "in_progress_task":in_progress_task,
        "pending_task":pending_task
    }
    return render(request, "dashboard/manager_dashboard.html",context=context)

and dashboard.html:
{% load static %}
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title><b>{% block title %}{% endblock title %}</b></title>
    <script
      src="https://kit.fontawesome.com/a076d05399.js"
      crossorigin="anonymous"
    ></script>
    <link rel="stylesheet" href="{% static "css/output.css" %}">
  </head>

  <body class="bg-gray-50 p-6">
    <div class="mx-auto max-w-[1400px]">
      <!-- Header -->
      <header class="flex items-center justify-between mb-8">
        <h1 class="text-2xl font-semibold">Dashboard</h1>
        <div class="flex items-center gap-4">
          <button class="relative rounded-full p-2 hover:bg-gray-100">
            <svg
              xmlns="http://www.w3.org/2000/svg"
              fill="none"
              viewBox="0 0 24 24"
              stroke-width="1.5"
              stroke="currentColor"
              class="size-6"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                d="M14.857 17.082a23.848 23.848 0 0 0 5.454-1.31A8.967 8.967 0 0 1 18 9.75V9A6 6 0 0 0 6 9v.75a8.967 8.967 0 0 1-2.312 6.022c1.733.64 3.56 1.085 5.455 1.31m5.714 0a24.255 24.255 0 0 1-5.714 0m5.714 0a3 3 0 1 1-5.714 0"
              />
            </svg>
          </button>
          <button
            class="h-10 w-10 rounded-full bg-blue-500 font-semibold text-white"
          >
            B
          </button>
        </div>
      </header>

      <main>
        <!-- stats grid -->
        <div class="grid grid-cols-4 gap-6">
          <!-- Total Task -->
          <div class="bg-white rounded-xl p-6 shadow-sm">
            <h3 class="text-sm font-medium text-gray-500 mb-4">Total Task</h3>
            <div class="flex justify-between items-start">
              <div>
                <p class="text-3xl font-semibold mb-1">{{total_task}}</p>
                <p class="text-gray-500 text-sm">111 Last Month</p>
              </div>
              <div class="bg-blue-100 p-3 rounded-full">
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  fill="none"
                  viewBox="0 0 24 24"
                  stroke-width="1.5"
                  stroke="currentColor"
                  class="w-6 h-6 text-blue-600 font-semibold"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M15.666 3.888A2.25 2.25 0 0 0 13.5 2.25h-3c-1.03 0-1.9.693-2.166 1.638m7.332 0c.055.194.084.4.084.612v0a.75.75 0 0 1-.75.75H9a.75.75 0 0 1-.75-.75v0c0-.212.03-.418.084-.612m7.332 0c.646.049 1.288.11 1.927.184 1.1.128 1.907 1.077 1.907 2.185V19.5a2.25 2.25 0 0 1-2.25 2.25H6.75A2.25 2.25 0 0 1 4.5 19.5V6.257c0-1.108.806-2.057 1.907-2.185a48.208 48.208 0 0 1 1.927-.184"
                  />
                </svg>
              </div>
            </div>
          </div>
          <!-- COmplete Task  -->
          <div class="bg-white rounded-xl p-6 shadow-sm">
            <h3 class="text-sm font-medium text-gray-500 mb-4">
              Completed Task
            </h3>
            <div class="flex justify-between items-start">
              <div>
                <p class="text-3xl font-semibold mb-1">{{completed_task}}</p>
                <p class="text-gray-500 text-sm">111 Last Month</p>
              </div>
              <div class="bg-green-100 p-3 rounded-full">
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  fill="none"
                  viewBox="0 0 24 24"
                  stroke-width="1.5"
                  stroke="currentColor"
                  class="w-6 h-6 text-green-600"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M9 12.75 11.25 15 15 9.75M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z"
                  />
                </svg>
              </div>
            </div>
          </div>
          <!-- Task in Progress -->
          <div class="bg-white rounded-xl p-6 shadow-sm">
            <h3 class="text-sm font-medium text-gray-500 mb-4">
              Task in Progress
            </h3>
            <div class="flex justify-between items-start">
              <div>
                <p class="text-3xl font-semibold mb-1">{{in_progress_task}}</p>
                <p class="text-gray-500 text-sm">111 Last Month</p>
              </div>
              <div class="bg-yellow-100 p-3 rounded-full">
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  fill="none"
                  viewBox="0 0 24 24"
                  stroke-width="1.5"
                  stroke="currentColor"
                  class="w-6 h-6 text-yellow-600"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M12 6v6h4.5m4.5 0a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z"
                  />
                </svg>
              </div>
            </div>
          </div>
          <!-- Todos -->
          <div class="bg-white rounded-xl p-6 shadow-sm">
            <h3 class="text-sm font-medium text-gray-500 mb-4">Todos</h3>
            <div class="flex justify-between items-start">
              <div>
                <p class="text-3xl font-semibold mb-1">{{pending_task}}</p>
                <p class="text-gray-500 text-sm">111 Last Month</p>
              </div>
              <div class="bg-purple-100 p-3 rounded-full">
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  fill="none"
                  viewBox="0 0 24 24"
                  stroke-width="1.5"
                  stroke="currentColor"
                  class="w-6 h-6 text-purple-600"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M15.666 3.888A2.25 2.25 0 0 0 13.5 2.25h-3c-1.03 0-1.9.693-2.166 1.638m7.332 0c.055.194.084.4.084.612v0a.75.75 0 0 1-.75.75H9a.75.75 0 0 1-.75-.75v0c0-.212.03-.418.084-.612m7.332 0c.646.049 1.288.11 1.927.184 1.1.128 1.907 1.077 1.907 2.185V19.5a2.25 2.25 0 0 1-2.25 2.25H6.75A2.25 2.25 0 0 1 4.5 19.5V6.257c0-1.108.806-2.057 1.907-2.185a48.208 48.208 0 0 1 1.927-.184"
                  />
                </svg>
              </div>
            </div>
          </div>
        </div>
        {% block tasks %} {% endblock tasks %}
      </main>
    </div>
    {% include "footer.html" %}
  </body>
</html>

here we simply used the context like total task,completed_task etc

moving onto next section in manager_dashboard.html:
{% extends "dashboard/dashboard.html" %} {% block tasks %} 
{% block title %}Manager Dashboard{% endblock title %}

<!-- Tasks Grid -->
<div class="bg-white rounded-xl shadow-sm">
  <!-- div 1 -->
  <div
    class="grid grid-cols-4 items-center p-4 mt-8 text-gray-500 text-sm border-b border-gray-100"
  >
    <p>TASK TITLE</p>
    <p>PRIORITY</p>
    <p>TEAM</p>
    <p>CREATED AT</p>
  </div>
  <!-- div 2 -->
  {% for task in tasks %}
    <div class="grid grid-cols-4 items-center p-4 gap-4 text-gray-500 text-sm border-b border-gray-100">
    <div class="flex items-center gap-2">
      <div class="w-2 h-2 bg-green-500 rounded-full"></div>
      <div>{{task.title}}</div>
    </div>

    <div>
      <span
        class="px-3 py-1 text-sm bg-blue-200 items-center justify-center rounded-2xl text-blue-500"
        >{{task.details.get_priority_display}}</span
      >
    </div>
    <div>
      <div class="flex -space-x-2">
        {% for emp in task.assigned_to.all %}
          <div
            class="w-8 h-8 rounded-full bg-blue-500 flex items-center justify-center text-white text-sm border-2 border-white"
          >
            {{emp.name|slice:":2"}}
          </div>
        {% endfor %}
      </div>
    </div>
    <div class="text-gray-500 text-sm">{{task.created_at|timesince}} ago</div>
  </div>
  {% endfor %}
  
</div>

{% endblock %}

at first we needed to show the title and since we have tasks from the context, we simply loop all the tasks div and in title wrote tasks.title, now for priority we need to do the reverse relation through details field as priority is in taskdetail model hence we would use task.details.priority but it will only show H,L,M which is not human readable so for this we would use the get_foo_dis[play method which makes content human readable by searching up the keys value in our case which was HIGH = 'H'
    MEDIUM = 'M'
    LOW = 'L'
    PRIORITY_OPTIONS = (
        (HIGH , 'High'),
        (MEDIUM, 'Medium'),
        (LOW, 'Low')
    )
so we will write task.details.get_priority_display
now in teams field we need first 2 or 1 letter of the employees name so for that for each task we run a loop for getting the all employee names then we used Django tag to slice it, we would need first 2 letter so we wrote emp.name|slice:":2"
then in created a section we used Django timesince tag to view the time as past format like 1 hour ago or 1 month ago etc so it will be task.created_at|timesince